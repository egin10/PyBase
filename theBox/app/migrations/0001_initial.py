# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-26 15:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('data_payload', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('detail_type', models.IntegerField(primary_key=True, serialize=False)),
                ('detail_text', models.TextField()),
            ],
            options={
                'db_table': 'detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encoding',
            fields=[
                ('encoding_type', models.IntegerField(primary_key=True, serialize=False)),
                ('encoding_text', models.TextField()),
            ],
            options={
                'db_table': 'encoding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('signature', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Icmphdr',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('icmp_type', models.IntegerField()),
                ('icmp_code', models.IntegerField()),
                ('icmp_csum', models.SmallIntegerField(blank=True, null=True)),
                ('icmp_id', models.SmallIntegerField(blank=True, null=True)),
                ('icmp_seq', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'icmphdr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iphdr',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('ip_src', models.IntegerField()),
                ('ip_dst', models.IntegerField()),
                ('ip_ver', models.IntegerField(blank=True, null=True)),
                ('ip_hlen', models.IntegerField(blank=True, null=True)),
                ('ip_tos', models.IntegerField(blank=True, null=True)),
                ('ip_len', models.SmallIntegerField(blank=True, null=True)),
                ('ip_id', models.SmallIntegerField(blank=True, null=True)),
                ('ip_flags', models.IntegerField(blank=True, null=True)),
                ('ip_off', models.SmallIntegerField(blank=True, null=True)),
                ('ip_ttl', models.IntegerField(blank=True, null=True)),
                ('ip_proto', models.IntegerField()),
                ('ip_csum', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iphdr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Opt',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('optid', models.IntegerField()),
                ('opt_proto', models.IntegerField()),
                ('opt_code', models.IntegerField()),
                ('opt_len', models.SmallIntegerField(blank=True, null=True)),
                ('opt_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'opt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('ref_id', models.AutoField(primary_key=True, serialize=False)),
                ('ref_system_id', models.IntegerField()),
                ('ref_tag', models.TextField()),
            ],
            options={
                'db_table': 'reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceSystem',
            fields=[
                ('ref_system_id', models.AutoField(primary_key=True, serialize=False)),
                ('ref_system_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'reference_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('vseq', models.IntegerField(primary_key=True, serialize=False)),
                ('ctime', models.DateTimeField()),
            ],
            options={
                'db_table': 'schema',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('hostname', models.TextField(blank=True, null=True)),
                ('interface', models.TextField(blank=True, null=True)),
                ('filter', models.TextField(blank=True, null=True)),
                ('detail', models.IntegerField(blank=True, null=True)),
                ('encoding', models.IntegerField(blank=True, null=True)),
                ('last_cid', models.IntegerField()),
            ],
            options={
                'db_table': 'sensor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SigClass',
            fields=[
                ('sig_class_id', models.AutoField(primary_key=True, serialize=False)),
                ('sig_class_name', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'sig_class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('sig_id', models.AutoField(primary_key=True, serialize=False)),
                ('sig_name', models.CharField(max_length=255)),
                ('sig_class_id', models.IntegerField()),
                ('sig_priority', models.IntegerField(blank=True, null=True)),
                ('sig_rev', models.IntegerField(blank=True, null=True)),
                ('sig_sid', models.IntegerField(blank=True, null=True)),
                ('sig_gid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'signature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SigReference',
            fields=[
                ('sig_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ref_seq', models.IntegerField()),
                ('ref_id', models.IntegerField()),
            ],
            options={
                'db_table': 'sig_reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tcphdr',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('tcp_sport', models.SmallIntegerField()),
                ('tcp_dport', models.SmallIntegerField()),
                ('tcp_seq', models.IntegerField(blank=True, null=True)),
                ('tcp_ack', models.IntegerField(blank=True, null=True)),
                ('tcp_off', models.IntegerField(blank=True, null=True)),
                ('tcp_res', models.IntegerField(blank=True, null=True)),
                ('tcp_flags', models.IntegerField()),
                ('tcp_win', models.SmallIntegerField(blank=True, null=True)),
                ('tcp_csum', models.SmallIntegerField(blank=True, null=True)),
                ('tcp_urp', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tcphdr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Udphdr',
            fields=[
                ('sid', models.IntegerField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('udp_sport', models.SmallIntegerField()),
                ('udp_dport', models.SmallIntegerField()),
                ('udp_len', models.SmallIntegerField(blank=True, null=True)),
                ('udp_csum', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'udphdr',
                'managed': False,
            },
        ),
    ]
